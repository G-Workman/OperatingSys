How do we discover Normal, abnormal, and Hidden Processes and Services?
    Get-Process SMSS,CSRSS,LSASS | Sort -property Id
    Get-Ciminstance win32_process | where {$_.Name -like "*LSASS*"} | Select *
Do boot processes have descriptions?
    Get-Process | Select Name, Id, Description | Sort -Property Id
Where do the system processes and services normally run from?               #C:\Windows\System32
    Get-Process | Select Name, Id, Path
    Get-Ciminstance Win32_service | Select Name, Processid, Pathname
    Get-Ciminstance Win32_process | Select *
Are Priority Levels of processes important?
    Get-Process | Select Name, Priorityclass
    Tasklist /m
    Tasklist /m /fi "IMAGENAME eq lsass.exe"
    Taskmgr
How would malware use Schedule Task?
    schtasks /query | more
    Get-ScheduledTask | Select * | Select -First 5

Process requires interaction
Service runs in the background with minimal to no interaction
.dll is a library that contain pointers to resources available for other programs to interact with

Why is process Validity Important?
    To find if the processes running are legit or tampered with
    
Check Malware/Hashes on:
    virustotal.com
    
.dll injections/hijacking
    alter the handles not the binary
    
get-process -name lsass | select -expandproperty modules | out-file $home/desktop/handles.txt -width 4096
    .................................................... | Format-Table -wrap
    View the modules the process is using and puts it in a file

sc.exe showsid Power

get-wmiobject win32_process | select-object -property Name, ProcessId, ParentProcessId, Path, commandline

schtasks.exe /query /tn \Microsoft\Xb1GameSave\Xb1GameSaveTask /v /fo list

netstat -anob


Process Explorer
AutoRuns
TCPView

ProcMon64.exe
    primary use
        log boot process (every second)
AutoRuns
    detects to see what starts automatically (drivers, startup programs, scheduled tasks, etc.)
        pink - not verified or exists
        yellow - file not found
        green - ?

ProcessExplorer64.exe
    properties
        path (explore takes you to location in file explorer)
        
TCPView64.exe
    netstat network listing (dynamic)
        Red - connection terminated
        green - connection made

UAC is GUI only
    UAC limits the privileges of user run applications to prevent the modification of system files, resources, or settings
    Registry key is located at "HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"
    COLOR-CODED CONSENT PROMPTS
        Red - Application or publisher blocked by group policy
        Blue & gold - Administrative application
        Blue - Trusted and Authenticode signed application
        Yellow - Unsigned or signed but not trusted application
    asInvoker - The application will run with the same permissions as the process that started it. 
                The application can be elevated to a higher permission level by selecting Run as Administrator.
    requireAdministrator - The application will run with administrator permissions. 
                           The user who starts the application must be a member of the Administrators group. 
                           If the opening process is not running with administrative permissions, the system will prompt for credentials.
    highestAvailable - The application will run with the highest permission level that it can. 
                       If the user who starts the application is a member of the Administrators group, this option is the same as requireAdministrator. 
                       If the highest available permission level is higher than the level of the opening process, the system will prompt for credentials.
                       Some Windows executables can "auto elevate" without a prompt.
    Does the file/binary/executable meet these conditions?
        Auto Elvate is True
            ./strings C:\Windows\System32\*.exe -accepteula | select-string -SimpleMatch "autoelevate"
        Digitally Signed
            ./sigcheck -m C:\Windows\System32\slui.exe -accepteula | Select-String -SimpleMatch "level"
        Trusted Directory
            i.e C:\Windows\System32                   
